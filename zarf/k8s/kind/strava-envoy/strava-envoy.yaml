apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy-configmap
data:
  Config: |
    node:
      cluster: service_oauth2
      id: test-id-1
    admin:
      access_log_path: /tmp/admin_access.log   # seems to be necessary to have an admin endpoint
      address:
        socket_address:
          protocol: TCP
          address: 0.0.0.0
          port_value: 9902
    static_resources:
      secrets:
      - name: token
        generic_secret:
          secret:
            inline_string: "CLIENT_SECRET"
      - name: hmac
        generic_secret:
          secret:
            inline_string: "HMAC_SECRET_HERE"
      listeners:
      - name: listener_0
        address:
          socket_address:
            address: 0.0.0.0
            port_value: 8081 
        filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              stat_prefix: ingress_http
              codec_type: AUTO
              strip_matching_host_port: false
              http_filters:
              - name: envoy.filters.http.oauth2
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.oauth2.v3.OAuth2
                  config:
                    token_endpoint:
                      cluster: oauth
                      uri: https://www.strava.com/oauth/token
                      timeout: 3s
                    authorization_endpoint: https://www.strava.com/oauth/authorize
                    redirect_uri: "http://%REQ(:authority)%/callback"              
                    redirect_path_matcher:
                      path:
                        exact: /callback
                    signout_path:
                      path:
                        exact: /signout  
                    forward_bearer_token: true                      
                    credentials:
                      client_id: "CLIENT_ID"
                      token_secret:
                        name: token
                      hmac_secret:
                        name: hmac
                    auth_scopes:
                    - activity:write
              - name: envoy.filters.http.router
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
              route_config:
                name: local_route           
                virtual_hosts:
                - name: local_service
                  domains: ["*"]
                  routes:
                  - match:
                      prefix: "/"
                    route: 
                      cluster: service_backend
                    typed_per_filter_config:
                      envoy.filters.http.csrf:
                        "@type": type.googleapis.com/envoy.extensions.filters.http.csrf.v3.CsrfPolicy
                        filter_enabled:
                          default_value:
                            numerator: 100
                            denominator: HUNDRED
      clusters:
      - name: service_backend
        type: STATIC
        connect_timeout: 5s
        load_assignment:
          cluster_name: service_backend
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: 127.0.0.1
                    port_value: 8082
      - name: oauth
        type: LOGICAL_DNS
        connect_timeout: 5s
        load_assignment:
          cluster_name: oauth
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: strava.com
                    port_value: 443
        transport_socket:
          name: envoy.transport_sockets.tls
          typed_config:
            "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
            sni: strava.com
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: strava-pod # Base POD name
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: strava # Selector for POD name search.
  template:
    metadata:
      labels:
        app: strava
    spec:
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      terminationGracePeriodSeconds: 60
      volumes:
        - name: config-volume
          configMap:
            name: envoy-configmap
            items:
            - key: Config
              path: envoy.yaml
      containers:
      - name: envoy
        image: envoyproxy/envoy-dev:latest
        command:
          - envoy
          - --base-id 1
          - --log-level debug
          - -c 
          - /etc/envoy-config/envoy.yaml
        ports:
        - name: envoy
          containerPort: 8081
        volumeMounts:
          - name: config-volume
            mountPath: /etc/envoy-config
      - name: strava
        image: strava-amd64:1.0
        env:
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: KUBERNETES_PODNAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: KUBERNETES_NAMESPACE_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: KUBERNETES_NODENAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        ports:
        - name: strava
          containerPort: 8082
---
apiVersion: v1
kind: Service
metadata:
  name: strava-service
spec:
  type: ClusterIP
  selector:
    app: srava
  ports:
  - name: strava
    port: 8082
    targetPort: strava
  - name: envoy
    port: 8081
    targetPort: envoy